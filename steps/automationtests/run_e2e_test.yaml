parameters:
  - name: browser
  - name: reportDirectory
  - name: repo
  - name: timeout
    type: number

steps:
  - checkout: ${{ parameters.repo }}
  - task: NodeTool@0
    inputs:
      versionSpec: "20.x"
    displayName: "Install Node.js"

  - script: |
      npm ci
    displayName: "Install Dependencies"

  - script: |
      npx playwright install --with-deps
    displayName: "Install Playwright with Browsers"

  - script: |
      npx bddgen --tags "@authSetup or @Smoke" && npx playwright test
    condition: ne(variables['Build.Reason'], 'Schedule')
    env:
      BROWSER: ${{ parameters.browser }}
      CONTACT_MANAGER_ONLY_PASS: $(CONTACT_MANAGER_ONLY_PASS)
      CI: 'true'
    timeoutInMinutes: ${{ parameters.timeout }}
    displayName: "Run Tests"

  - script: |
      npx bddgen --tags "@authSetup or @SystemTest or @IntegrationTest" && npx playwright test
    condition: and(eq(variables['Build.Reason'], 'Schedule'), ne(variables['DayOfWeek'], 'Tuesday'), ne(variables['DayOfWeek'], 'Thursday'))
    env:
      BROWSER: ${{ parameters.browser }}
      CONTACT_MANAGER_ONLY_PASS: $(CONTACT_MANAGER_ONLY_PASS)
      CI: 'true'
    timeoutInMinutes: ${{ parameters.timeout }}
    displayName: "Run Tests - Scheduled Runs - Desktop Browser"

  - script: |
      npx bddgen --tags "@authSetup or @SystemTest or @IntegrationTest" && npx playwright test
    condition: and(eq(variables['Build.Reason'], 'Schedule'), eq(variables['DayOfWeek'], 'Tuesday'))
    env:
      BROWSER: ios
      CONTACT_MANAGER_ONLY_PASS: $(CONTACT_MANAGER_ONLY_PASS)
      CI: 'true'
    timeoutInMinutes: ${{ parameters.timeout }}
    displayName: "Run Tests - Scheduled Runs - iOS"

  - script: |
      npx bddgen --tags "@authSetup or @SystemTest or @IntegrationTest" && npx playwright test
    condition: and(eq(variables['Build.Reason'], 'Schedule'), eq(variables['DayOfWeek'], 'Thursday'))
    env:
      BROWSER: android
      CONTACT_MANAGER_ONLY_PASS: $(CONTACT_MANAGER_ONLY_PASS)
      CI: 'true'
    timeoutInMinutes: ${{ parameters.timeout }}
    displayName: "Run Tests - Scheduled Runs - Android"

  - publish: '$(System.DefaultWorkingDirectory)/${{ parameters.reportDirectory }}/playwright'
    condition: always()
    artifact: playwright-report
    displayName: Publish Playwright Report

  - publish: '$(System.DefaultWorkingDirectory)/${{ parameters.reportDirectory }}/cucumber'
    condition: always()
    artifact: cucumber-report
    displayName: Publish Cucumber Report